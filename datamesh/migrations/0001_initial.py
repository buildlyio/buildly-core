# Generated by Django 5.0.14 on 2025-05-11 00:27

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogicModuleModel',
            fields=[
                ('logic_module_model_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('logic_module_endpoint_name', models.CharField(help_text='Without leading and trailing slashes', max_length=255)),
                ('model', models.CharField(max_length=128)),
                ('endpoint', models.CharField(help_text="Endpoint of the model with leading and trailing slashs, p.e.: '/siteprofiles/'", max_length=255)),
                ('lookup_field_name', models.SlugField(default='id', help_text="Name of the field in the model for detail methods, p.e.: 'id' or 'uuid'", max_length=64)),
                ('is_local', models.BooleanField(default=False, help_text='Local model is taken from Buildly')),
            ],
            options={
                'unique_together': {('logic_module_endpoint_name', 'endpoint'), ('logic_module_endpoint_name', 'model')},
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('key', models.SlugField(help_text="The key in the response body, where the related object data will be saved into, p.e.: 'contact_siteprofile_relationship'.", max_length=64)),
                ('relationship_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fk_field_name', models.CharField(blank=True, max_length=128, null=True)),
                ('origin_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joins_origins', to='datamesh.logicmodulemodel')),
                ('related_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joins_relateds', to='datamesh.logicmodulemodel')),
            ],
            options={
                'unique_together': {('relationship_uuid', 'origin_model', 'related_model')},
            },
        ),
        migrations.CreateModel(
            name='JoinRecord',
            fields=[
                ('join_record_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_id', models.PositiveIntegerField(blank=True, null=True)),
                ('record_uuid', models.UUIDField(blank=True, null=True)),
                ('related_record_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_record_uuid', models.UUIDField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, help_text='Related Organization with access', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joinrecords', to='datamesh.relationship')),
            ],
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.UniqueConstraint(condition=models.Q(('record_uuid', None), ('related_record_uuid', None)), fields=('relationship', 'record_id', 'related_record_id'), name='unique_join_record_ids'),
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.UniqueConstraint(condition=models.Q(('record_id', None), ('related_record_id', None)), fields=('relationship', 'record_uuid', 'related_record_uuid'), name='unique_join_record_uuids'),
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.UniqueConstraint(condition=models.Q(('record_uuid', None), ('related_record_id', None)), fields=('relationship', 'record_id', 'related_record_uuid'), name='unique_join_record_id_uuid'),
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.UniqueConstraint(condition=models.Q(('record_id', None), ('related_record_uuid', None)), fields=('relationship', 'record_uuid', 'related_record_id'), name='unique_join_record_uuid_id'),
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('record_id', None), ('record_uuid', None), _negated=True), models.Q(models.Q(('record_id', None), _negated=True), models.Q(('record_uuid', None), _negated=True), _negated=True)), name='one_record_primary_key'),
        ),
        migrations.AddConstraint(
            model_name='joinrecord',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('related_record_id', None), ('related_record_uuid', None), _negated=True), models.Q(models.Q(('related_record_id', None), _negated=True), models.Q(('related_record_uuid', None), _negated=True), _negated=True)), name='one_related_record_primary_key'),
        ),
    ]
